[project]
name = "hydraxmpm"
version = "0.1.0"
description = "A simple Material Point Method solver in JAX"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "chex>=0.1.87",
    "equinox>=0.11.8",
    "numpy>=2.1.3",
    "optimistix>=0.0.9",
    "typing-extensions>=4.12.2",
]
authors = [
  {name = "Retief Lubbe", email = "r.lubbe@utwente.nl"},
  {name = "Hongyang Cheng", email = "h.cheng@utwente.nl"}]
license = {file = "LICENSE"}
keywords = ["jax", "material-point-method", "granular"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering",
    "Development Status :: 2 - Pre-Alpha",
    "Private :: Do Not Upload"
]
urls = {repository = "https://github.com/GrainLearning/HydraxMPM" }


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
default-groups = ["gpu","dev"]

[tool.hatch.build]
include = ["hydraxmpm/*"]

[dependency-groups]
gpu = [
    "jax[cuda12]>=0.4.35",
]
cpu = [
    "jax>=0.4.35",
]
dev = [
    "mkdocs>=1.6.1",
    "mkdocs-autorefs>=1.2.0",
    "mkdocs-material>=9.5.44",
    "mkdocstrings>=0.27.0",
    "mkdocstrings-python>=1.12.2",
    "pytest>=8.3.3",
    "ruff>=0.7.3",
]
plot = [
    "imageio>=2.36.0",
    "matplotlib>=3.9.2",
    "pyvista>=0.44.1",
]



[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I001",  # isort
]
ignore = [
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "E741",  # ambiguous variable name
    "N806", # argument name should be lowercase
    "N803", # argument name should be lowercase
]
fixable = ["I001", "F401"]