[project]
name = "hydraxmpm"
version = "0.0.1"
description = "A simple Material Point Method solver in JAX"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "equinox>=0.11.10",
    "numpy>=2.1.3",
    "optimistix>=0.0.9",
    "typing-extensions>=4.12.2",
    "jax>=0.4.35",
    "jax[cuda12]>=0.4.35",
    "jaxtyping>=0.2.37",
    "typeguard==2.13.3",

]
authors = [
  {name = "Retief Lubbe", email = "r.lubbe@utwente.nl"},
  {name = "Hongyang Cheng", email = "h.cheng@utwente.nl"}]
license = {file = "LICENSE"}
keywords = ["jax", "material-point-method", "granular"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering",
    "Development Status :: 2 - Pre-Alpha"
]
urls = {repository = "https://github.com/GrainLearning/HydraxMPM" }


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
default-groups = ["plot","dev"]

[tool.hatch.build]
include = ["hydraxmpm/*"]

[tool.hatch.build.targets.wheel]
packages = ["hydraxmpm"]


[dependency-groups]
dev = [
    "mkdocs>=1.6.1",
    "mkdocs-autorefs>=1.2.0",
    "mkdocs-material>=9.5.44",
    "mkdocstrings>=0.27.0",
    "mkdocstrings-python>=1.12.2",
    "pytest>=8.3.3",
    "ruff>=0.7.3",
    "twine>=6.0.1",
    "tox-uv>=1.25.0",
    "pre-commit>=4.1.0",
    "pytest-cov>=6.0.0",
    "deptry>=0.23.0",
    "mypy>=1.15.0",
]
plot = [
    "matplotlib>=3.9.2",
    "polyscope>=2.3.0",
    "pyqt5>=5.15.11",
    "pyvista>=0.44.2",
    "scienceplots>=2.1.1",
]



[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I001",  # isort
]
ignore = [
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "E741",  # ambiguous variable name
    "N806", # argument name should be lowercase
    "N803", # argument name should be lowercase
    "F811", # redefinition (e.g., constitutive_law: ConstitutiveLaw)
]
fixable = ["I001", "F401"]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]


[tool.deptry]
exclude = ["examples", "not_tested",".venv","test","not_test","NotInclude"]
